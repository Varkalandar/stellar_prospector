/*
 * ShipComponentTrade.java
 *
 * Created on 26.03.2012
 *
 * Author: Hj. Malthaner
 * Email:  h_malthaner@users.sourceforge.net
 *
 * See license.txt for license details
 */

package solarex.ui.panels;

import java.awt.Container;
import java.text.NumberFormat;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import solarex.ship.Ship;
import solarex.ship.components.EquipmentFactory;
import solarex.ship.components.ShipComponent;
import solarex.system.Solar;
import solarex.ui.ComponentFactory;
import solarex.ui.FontFactory;

/**
 * Ship component trade panel.
 * 
 * @author Hj. Malthaner
 */
public class ComponentTrade extends javax.swing.JPanel 
{
    private SpaceStationPanel spaceStationPanel;
    private Ship ship;
    private Solar station;

    private final NumberFormat nf = NumberFormat.getInstance();
    private final DefaultTableModel tableModel;
    
    /**
     * Creates new form ShipComponentTrade
     */
    public ComponentTrade(Solar station, Ship ship, SpaceStationPanel spaceStationPanel) 
    {
        this.spaceStationPanel = spaceStationPanel;
        this.ship = ship;
        this.station = station;
        
        initComponents();
        
        titleLabel.setFont(FontFactory.getPanelHeading());
        
        fillComponentList();
        
        tableModel = new DefaultTableModel(6, 2);
        equipmentDetailTable.setModel(tableModel);

        titleLabel.setFont(FontFactory.getPanelHeading());

        ComponentFactory.customizeTable(equipmentDetailTable);
        jPanel3.setBackground(ComponentFactory.boxBackground);
        
        jLabel1.setFont(FontFactory.getLabelHeading());
        jLabel2.setFont(FontFactory.getLabelHeading());
        advertisementLabel.setFont(FontFactory.getLarger());
        jLabel4.setFont(FontFactory.getLabelHeading());
        jLabel6.setFont(FontFactory.getLabelHeading());
        jLabel7.setFont(FontFactory.getLabelHeading());

        cashLabel.setFont(FontFactory.getLarger());
        spaceLabel.setFont(FontFactory.getLarger());
        
        ComponentFactory.customizeButton(buyButton);
        ComponentFactory.customizeButton(loungeButton);
        ComponentFactory.customizeButton(sellButton);
        
        ComponentFactory.customizeScrollpane(jScrollPane1);
        ComponentFactory.customizeScrollpane(jScrollPane2);
        ComponentFactory.customizeScrollpane(jScrollPane4);
        
        ComponentFactory.customizeList(availableEquipmentList, 2);
        ComponentFactory.customizeList(installedEquipmentList, 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        soldComponentsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableEquipmentList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        installedComponentsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        installedEquipmentList = new javax.swing.JList();
        titleLabel = new javax.swing.JLabel();
        buyButton = new javax.swing.JButton();
        sellButton = new javax.swing.JButton();
        advertisementLabel = new javax.swing.JLabel();
        loungeButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        equipmentDetailTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        spaceLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cashLabel = new javax.swing.JLabel();

        setBackground(java.awt.Color.black);
        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.darkGray));
        setForeground(java.awt.Color.green);
        setMinimumSize(new java.awt.Dimension(872, 560));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(872, 560));
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.darkGray));
        jPanel1.setMinimumSize(new java.awt.Dimension(870, 540));
        jPanel1.setPreferredSize(new java.awt.Dimension(870, 550));
        jPanel1.setLayout(null);

        soldComponentsPanel.setLayout(new java.awt.BorderLayout());

        availableEquipmentList.setBackground(java.awt.Color.darkGray);
        availableEquipmentList.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        availableEquipmentList.setForeground(java.awt.Color.lightGray);
        availableEquipmentList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        availableEquipmentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availableEquipmentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                availableEquipmentListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(availableEquipmentList);

        soldComponentsPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(soldComponentsPanel);
        soldComponentsPanel.setBounds(20, 140, 360, 160);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(java.awt.Color.green);
        jLabel1.setText("Installed Equipment");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(470, 110, 200, 30);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(java.awt.Color.green);
        jLabel2.setText("Available Equipment");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 110, 200, 30);

        installedComponentsPanel.setLayout(new java.awt.BorderLayout());

        installedEquipmentList.setBackground(java.awt.Color.darkGray);
        installedEquipmentList.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        installedEquipmentList.setForeground(java.awt.Color.lightGray);
        installedEquipmentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        installedEquipmentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                installedEquipmentListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(installedEquipmentList);

        installedComponentsPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(installedComponentsPanel);
        installedComponentsPanel.setBounds(470, 140, 360, 160);

        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel.setForeground(java.awt.Color.white);
        titleLabel.setText("Equipment Shop");
        jPanel1.add(titleLabel);
        titleLabel.setBounds(20, 10, 340, 40);

        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(buyButton);
        buyButton.setBounds(390, 140, 70, 25);

        sellButton.setText("Sell");
        sellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sellButton);
        sellButton.setBounds(390, 180, 70, 25);

        advertisementLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        advertisementLabel.setForeground(java.awt.Color.lightGray);
        advertisementLabel.setText("<html>We offer the finest equipment for your ship! At totally reasonable prices, of course.</html>");
        advertisementLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(advertisementLabel);
        advertisementLabel.setBounds(420, 20, 420, 60);

        loungeButton.setText("Return To Lounge");
        loungeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loungeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(loungeButton);
        loungeButton.setBounds(20, 490, 170, 25);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        jPanel3.setLayout(new java.awt.BorderLayout());

        equipmentDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        equipmentDetailTable.setEnabled(false);
        jPanel3.add(equipmentDetailTable, java.awt.BorderLayout.PAGE_START);

        jScrollPane4.setViewportView(jPanel3);

        jPanel2.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 330, 810, 130);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(java.awt.Color.green);
        jLabel4.setText("Item Details");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 300, 200, 30);

        spaceLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        spaceLabel.setForeground(java.awt.Color.white);
        spaceLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        spaceLabel.setText("0/0t");
        jPanel1.add(spaceLabel);
        spaceLabel.setBounds(60, 80, 120, 20);

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(java.awt.Color.green);
        jLabel6.setText("Used Space:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 80, 110, 20);

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(java.awt.Color.green);
        jLabel7.setText("Cash:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 60, 90, 20);

        cashLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cashLabel.setForeground(java.awt.Color.white);
        cashLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cashLabel.setText("0$");
        jPanel1.add(cashLabel);
        cashLabel.setBounds(60, 60, 120, 20);

        add(jPanel1, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void loungeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        returnToLoungeButtonActionPerformed(evt);
    }
    
    
    private void returnToLoungeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToLoungeButtonActionPerformed
        
        ship.recalculateCargoSpace();
        
        Container c = getParent();
        c.remove(this);
        c.add(spaceStationPanel);
        c.validate();
        c.repaint();        
    }//GEN-LAST:event_returnToLoungeButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        Object o = availableEquipmentList.getSelectedValue();
        if(o != null)
        {
            EquipmentWrapper wrap = (EquipmentWrapper)o;
            ship.equipment.addComponent(wrap.getComponent());
            ship.cargo.money -= wrap.getComponent().calculatePrice(station.society.techLevel);
        }
        fillComponentList();
    }//GEN-LAST:event_buyButtonActionPerformed

    private void sellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtonActionPerformed
        Object o = installedEquipmentList.getSelectedValue();
        if(o != null)
        {
            EquipmentWrapper wrap = (EquipmentWrapper)o;
            ship.equipment.removeComponent(wrap.getComponent());
            ship.cargo.money += wrap.getComponent().calculatePrice(station.society.techLevel);
        }
        fillComponentList();
    }//GEN-LAST:event_sellButtonActionPerformed

    private void availableEquipmentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_availableEquipmentListValueChanged
        Object o = availableEquipmentList.getSelectedValue();
        if(o != null)
        {
            EquipmentWrapper wrap = (EquipmentWrapper)o;
            showEquipmentDetails(wrap.getComponent());
        }
    }//GEN-LAST:event_availableEquipmentListValueChanged

    private void installedEquipmentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_installedEquipmentListValueChanged
        Object o = installedEquipmentList.getSelectedValue();
        if(o != null)
        {
            EquipmentWrapper wrap = (EquipmentWrapper)o;
            showEquipmentDetails(wrap.getComponent());
        }
    }//GEN-LAST:event_installedEquipmentListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advertisementLabel;
    private javax.swing.JList availableEquipmentList;
    private javax.swing.JButton buyButton;
    private javax.swing.JLabel cashLabel;
    private javax.swing.JTable equipmentDetailTable;
    private javax.swing.JPanel installedComponentsPanel;
    private javax.swing.JList installedEquipmentList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton loungeButton;
    private javax.swing.JButton sellButton;
    private javax.swing.JPanel soldComponentsPanel;
    private javax.swing.JLabel spaceLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void fillComponentList() 
    {
        final EquipmentFactory factory = new EquipmentFactory();
        
        final DefaultListModel model = new DefaultListModel();

        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.STANDARD_DRIVE)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.SINGLE_PASSENGER_CABIN)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.DOUBLE_PASSENGER_CABIN)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.LUXURY_PASSENGER_CABIN)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.FANFOSTAR)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.TROMPETECHOS)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.DRILLDOWN_DYNAMOS)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.SUPERSCOOPER)));
        model.addElement(new EquipmentWrapper(factory.create(EquipmentFactory.Component.INO_SLUURP)));

        availableEquipmentList.setModel(model);

        final DefaultListModel shipModel = new DefaultListModel();

        for(final ShipComponent comp : ship.equipment.components)
        {
            shipModel.addElement(new EquipmentWrapper(comp));
        }
        
        installedEquipmentList.setModel(shipModel);
        
        ship.recalculateCargoSpace();

        nf.setMaximumFractionDigits(2);
        
        cashLabel.setText("" + nf.format(ship.cargo.money) + " Cr");
        spaceLabel.setText("" + ship.equipment.getMass() + "/" + ship.type.equipmentSpace + " t");
    }

    private void showEquipmentDetails(ShipComponent comp)
    {
        /*
        StringBuilder buf = new StringBuilder("<html>");
        
        if(comp.getPassengerCapacity() > 0)
        {
            buf.append("Passenger capacity: <font color=#FFFFFF>")
                    .append(comp.getPassengerCapacity()).append("</font><br>");
        }

        if(comp.getHyperjumpRange() > 0)
        {
            buf.append("Hyperjump range:    <font color=#FFFFFF>")
                    .append(comp.getHyperjumpRange()).append(" ly per 100t</font><br>");
        }

        if(comp.getMass() > 0)
        {
            buf.append("Mass:             <font color=#FFFFFF>")
                    .append(comp.getMass()).append(" t</font><br>");
        }

        if(comp.getMinOperatingTemp() > 0)
        {
            buf.append("Min. oper. temp:    <font color=#FFFFFF>")
                    .append(comp.getMinOperatingTemp()).append(" k</font><br>");
        }
        if(comp.getMaxOperatingTemp() > 0)
        {
            buf.append("Max. oper. temp:    <font color=#FFFFFF>")
                    .append(comp.getMaxOperatingTemp()).append(" k</font><br>");
        }

        if(comp.getBasePrice() > 0)
        {
            buf.append("Price:              <font color=#FFFFFF>")
                    .append(calculatePrice(comp.getBasePrice())).append(".00 Cr</font><br>");
        }
        
        if(comp.getMaxDurability()> 1)
        {
            buf.append("Durability: <font color=#FFFFFF>")
                    .append(comp.getCurrentDurability()).append("/")
                    .append(comp.getMaxDurability()).append("</font><br>");
        }

        buf.append("</html>");
        equipmentDetailArea.setText(buf.toString());
        */
        
        int row = 0;
        
        if(comp.getPassengerCapacity() > 0)
        {
            tableModel.setValueAt("Passenger Capacity:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.getPassengerCapacity() + "</font></html>", row, 1);
            row++;
        }

        if(comp.getHyperjumpRange() > 0)
        {
            tableModel.setValueAt("Hyperjump range:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.getHyperjumpRange() + " ly per 100t</font></html>", row, 1);
            row++;
        }

        if(comp.getMass() > 0)
        {
            tableModel.setValueAt("Mass:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.getMass() + " t</font></html>", row, 1);
            row++;
        }

        if(comp.getMinOperatingTemp() > 0)
        {
            tableModel.setValueAt("Min. oper. temp:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.getMinOperatingTemp() + " k</font></html>", row, 1);
            row++;
        }
        
        
        if(comp.getMaxOperatingTemp() > 0)
        {
            tableModel.setValueAt("Max. oper. temp:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.getMaxOperatingTemp() + " k</font></html>", row, 1);
            row++;
        }

        if(comp.getBasePrice() > 0)
        {
            tableModel.setValueAt("Price:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + comp.calculatePrice(station.society.techLevel) + ".00 Cr</font></html>", row, 1);
            row++;
        }
        
        if(comp.getMaxDurability()> 1)
        {
            tableModel.setValueAt("Durability:", row, 0);
            tableModel.setValueAt("<html><font color=#FFFFFF>" + 
                    comp.getCurrentDurability() + "/" +
                    comp.getMaxDurability() + 
                    "</font></html>", row, 1);
            row++;
        }
        
        tableModel.fireTableDataChanged();
    }
        
    private class EquipmentWrapper
    {
        private ShipComponent comp;
        
        public EquipmentWrapper(ShipComponent comp)
        {
            this.comp = comp;
        }
        
        @Override
        public String toString()
        {
            StringBuilder buf = new StringBuilder("<html><font color='#CCCCCC'>");
            buf.append(comp.getName());
            buf.append(", ");
            buf.append(nf.format(comp.calculatePrice(station.society.techLevel)));
            buf.append(" Cr</font></html>");
            
            return buf.toString();
        }

        private ShipComponent getComponent() 
        {
            return comp;
        }
    }
}
